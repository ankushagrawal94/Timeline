//
//  VTimeline.m
//  Sundial
//
//  Created by Ankush Agrawal on 2/16/15.
//  Copyright (c) 2015 Sundial. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "VTimeline.h"


@implementation VTimeline

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawRightItemWithArtistImage: (UIImage*)artistImage imageY: (CGFloat)imageY imageSize: (CGFloat)imageSize timeText: (NSString*)timeText artistName: (NSString*)artistName
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 1];
    
    //// Variable Declarations
    CGFloat timeHeight = 11;
    CGFloat timeWidth = 24;
    CGFloat timeX = 6;
    CGFloat lineX = timeX + timeWidth;
    CGFloat imageX = 77;
    CGFloat lineWidth = imageX - lineX;
    CGFloat timeY = imageSize / 2.0 - timeHeight / 2.0 + imageY;
    CGFloat lineY = imageSize / 2.0 + imageY;
    CGFloat textY = imageY + imageSize;
    
    //// Rectangle Drawing
    CGRect rectangleRect = CGRectMake((timeX - 6), (timeY - 27), (timeWidth + 14), (timeHeight + 14.5));
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: rectangleRect cornerRadius: 12.75];
    [UIColor.whiteColor setFill];
    [rectanglePath fill];
    NSMutableParagraphStyle* rectangleStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    rectangleStyle.alignment = NSTextAlignmentCenter;
    
    NSDictionary* rectangleFontAttributes = @{NSFontAttributeName: [UIFont fontWithName: @"Helvetica" size: 12], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: rectangleStyle};
    
    CGFloat rectangleTextHeight = [timeText boundingRectWithSize: CGSizeMake(rectangleRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: rectangleFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, rectangleRect);
    [timeText drawInRect: CGRectMake(CGRectGetMinX(rectangleRect), CGRectGetMinY(rectangleRect) + (CGRectGetHeight(rectangleRect) - rectangleTextHeight) / 2, CGRectGetWidth(rectangleRect), rectangleTextHeight) withAttributes: rectangleFontAttributes];
    CGContextRestoreGState(context);
    
    
    //// Oval Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, (imageX + 52), (imageY + 38));
    
    CGRect ovalRect = CGRectMake(-58, -58, imageSize, imageSize);
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: ovalRect];
    CGContextSaveGState(context);
    [ovalPath addClip];
    [artistImage drawInRect: CGRectMake(floor(CGRectGetMinX(ovalRect) + 0.5), floor(CGRectGetMinY(ovalRect) + 0.5), artistImage.size.width, artistImage.size.height)];
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
    
    
    //// Text Drawing
    CGRect textRect = CGRectMake(71, (textY - 20), 116, 18);
    NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
    textStyle.alignment = NSTextAlignmentCenter;
    
    NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: UIFont.labelFontSize], NSForegroundColorAttributeName: UIColor.blackColor, NSParagraphStyleAttributeName: textStyle};
    
    CGFloat textTextHeight = [artistName boundingRectWithSize: CGSizeMake(textRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: textFontAttributes context: nil].size.height;
    CGContextSaveGState(context);
    CGContextClipToRect(context, textRect);
    [artistName drawInRect: CGRectMake(CGRectGetMinX(textRect), CGRectGetMinY(textRect) + (CGRectGetHeight(textRect) - textTextHeight) / 2, CGRectGetWidth(textRect), textTextHeight) withAttributes: textFontAttributes];
    CGContextRestoreGState(context);
    
    
    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake((lineX - 6), (lineY - 20), lineWidth, 1)];
    [color2 setFill];
    [rectangle2Path fill];
}

@end
